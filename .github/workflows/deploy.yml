name: Deploy dailyexpression to EC2 via ECR

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Setup Docker
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          echo "${{ secrets.ENV_PROD }}" > ./back/server/.env
          docker build -t dailyexpression ./back/server
          docker tag dailyexpression:latest ${{ steps.login-ecr.outputs.registry }}/dailyexpression:latest

      - name: Push to Amazon ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/dailyexpression:latest

      - name: SSH into EC2 and restart container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            mkdir -p ~/dailyexpression
            echo "${{ secrets.ENV_PROD }}" > ~/dailyexpression/.env

            aws ecr get-login-password --region ap-northeast-2 | \
            docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}

            docker stop dailyexpression || true
            docker rm dailyexpression || true
            docker pull ${{ steps.login-ecr.outputs.registry }}/dailyexpression:latest

            docker run -d --name dailyexpression \
              --env-file ~/dailyexpression/.env \
              -p 8000:8000 \
              ${{ steps.login-ecr.outputs.registry }}/dailyexpression:latest