services:
  redis:
    image: redis:7
    container_name: redis-server
    restart: always
    ports:
      - "6379:6379"
    environment:
      - TZ=Asia/Seoul
    volumes:
      - ./redis_data:/data
      - ./redis_conf/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant-server
    restart: always
    ports:
      - "6333:6333"
      - "6334:6334"
    environment:
      - TZ=Asia/Seoul
    volumes:
      - ./qdrant_data:/qdrant/storage      

#모니터링 대시보드 서비스 추가
  bull-board:
    build:
      context: ./bull-board 
      dockerfile: Dockerfile
    container_name: bull-board-dashboard
    restart: always
    ports:
      - "4000:4000" 
    env_file:
      - ./server/.env
    environment:
      - TZ=Asia/Seoul
      # REDIS_URL은 Dockerfile.arena 내부에서 설정되거나 .env 파일로 주입됩니다.
    depends_on:
      - redis # Redis 서비스에 의존성 추가

#서버용
  server:
    image: 123403344015.dkr.ecr.ap-northeast-2.amazonaws.com/dailyexpression:latest
    container_name: nest-server
    restart: always
    ports:
      - "8000:8000"
    env_file:
      - ./server/.env
    environment:
      - TZ=Asia/Seoul
    depends_on:
      - redis
      - qdrant

#################################################################################
# 로컬용
  # server:
  #   build:
  #     context: ./server
  #     dockerfile: Dockerfile
  #   container_name: nest-server
  #   restart: always
  #   ports:
  #     - "8000:8000"
  #   env_file:
  #     - ./server/.env
  #   environment:
  #     - TZ=Asia/Seoul
  #   depends_on:
  #     - redis
  #     - qdrant

#   prometheus:
#     image: prom/prometheus
#     container_name: prometheus
#     volumes:
#       - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
#     ports:
#       - "9090:9090"

#   grafana:
#     image: grafana/grafana
#     container_name: grafana
#     ports:
#       - "3000:3000"
#     volumes:
#       - grafana-storage:/var/lib/grafana

#   cadvisor:
#     image: gcr.io/cadvisor/cadvisor
#     container_name: cadvisor
#     restart: always
#     ports:
#       - "8080:8080"
#     volumes:
#       - /:/rootfs:ro
#       - /var/run:/var/run:ro
#       - /sys:/sys:ro
#       - /var/lib/docker/:/var/lib/docker:ro
#     privileged: true
#     environment:
#       - TZ=Asia/Seoul

#   node-exporter:
#     image: prom/node-exporter
#     container_name: node-exporter
#     restart: always
#     ports:
#       - "9100:9100"
#     environment:
#       - TZ=Asia/Seoul

#   redis-exporter:
#     image: oliver006/redis_exporter
#     container_name: redis-exporter
#     restart: always
#     ports:
#       - "9121:9121"
#     environment:
#       - REDIS_ADDR=redis://redis:6379
#       - TZ=Asia/Seoul

# volumes:
#   grafana-storage:
